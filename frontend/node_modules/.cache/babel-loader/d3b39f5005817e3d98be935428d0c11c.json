{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Desktop/reactproject/frontend/src/components/Resource.jsx\";\nimport { Component } from \"react\";\nimport getResource from \"../actions/GetResource\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Resource extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkClickfun = (id, grp) => {\n      if (this.state.checkClick == false) {\n        this.setState({\n          checkClick: true\n        });\n        document.getElementById(id).classList.add(\"applyonselect\");\n        ids = [...this.state.transfer.ids, id];\n        grp = this.state.transfer.group = grp;\n        this.setState(ids);\n        this.setState(grp);\n      } else {\n        this.setState({\n          checkClick: false\n        });\n        document.getElementById(id).classList.remove(\"applyonselect\");\n        let newelm = this.state.transfer.ids.filter(function (person) {\n          return person !== e.target.value;\n        });\n        this.setState({});\n      }\n    };\n\n    this.setData = async () => {\n      const da = await getResource;\n      return da;\n    };\n\n    this.state = {\n      data: null,\n      checkClick: false,\n      transfer: {\n        group: \"\",\n        ids: []\n      }\n    };\n  } // make selectable\n\n\n  componentDidMount() {\n    let da = this.setData();\n    this.setState({\n      data: da.imgData\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"primary\",\n        children: \"MOVE TO TERMINATOR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"300px\",\n          overflowY: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: this.state.data !== null && this.state.data.map(item => {\n              return item.group == \"terminator\" ? /*#__PURE__*/_jsxDEV(Col, {\n                onClick: () => checkClickfun(item.id, \"terminator\"),\n                id: item.id,\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: imgapi + item.id,\n                    className: \"img \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 86\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this) : \"\";\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"primary\",\n        children: \"MOVE TO HUMAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 77\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"300px\",\n          overflowY: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              marginTop: \"10px;\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: this.state.data !== null && this.state.data.map(item => {\n                return item.group == \"human\" ? /*#__PURE__*/_jsxDEV(Col, {\n                  onClick: () => checkClickfun(item.id, \"human\"),\n                  id: item.id,\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: \"human.jpg\",\n                      className: \"img \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 85\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 81\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 17\n                }, this) : \"\";\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lenovo/Desktop/reactproject/frontend/src/components/Resource.jsx"],"names":["Component","getResource","Container","Row","Col","Button","Resource","constructor","props","checkClickfun","id","grp","state","checkClick","setState","document","getElementById","classList","add","ids","transfer","group","remove","newelm","filter","person","e","target","value","setData","da","data","componentDidMount","imgData","render","height","overflowY","listStyle","map","item","imgapi","marginTop"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport getResource from \"../actions/GetResource\";\r\nimport { Container,Row,Col,Button } from \"react-bootstrap\";\r\nexport default class Resource extends Component{\r\n   \r\n    constructor(props){\r\n     super(props) \r\n     this.state = {data:null,checkClick:false,transfer:{group:\"\",ids:[]}}\r\n    }\r\n    \r\n    // make selectable\r\n     checkClickfun = (id,grp)=>{\r\n     if(this.state.checkClick==false){\r\n       this.setState({checkClick:true});\r\n       document.getElementById(id).classList.add(\"applyonselect\")\r\n       ids=[...this.state.transfer.ids,id];\r\n       grp=this.state.transfer.group=grp\r\n       this.setState(ids)\r\n       this.setState(grp)\r\n     }else{\r\n       this.setState({checkClick:false});\r\n       document.getElementById(id).classList.remove(\"applyonselect\")\r\n       let newelm=this.state.transfer.ids.filter(function(person) { \r\n        return person !== e.target.value \r\n       })\r\n       this.setState({\r\n     });    \r\n     }\r\n   }\r\n    componentDidMount(){\r\n      let da=this.setData();\r\n      this.setState({data:da.imgData});\r\n    }\r\n\r\n    setData = async () =>{\r\n      const da = await getResource;\r\n      return da;\r\n    }\r\n    \r\n    render(){\r\n      return(\r\n        <Container>  \r\n        <Button variant=\"primary\" className=\"primary\">MOVE TO TERMINATOR</Button>\r\n        <div  style={{height:\"300px\",overflowY:\"auto\"}}>\r\n          <ul style={{listStyle:\"none\"}}>\r\n          <Row >     \r\n            {\r\n            this.state.data!==null && this.state.data.map((item) => {\r\n                return(item.group==\"terminator\" ?\r\n                <Col onClick={()=>checkClickfun(item.id,\"terminator\")}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>:\"\" )\r\n                }) \r\n            }   \r\n           </Row>\r\n\r\n          </ul>\r\n        </div>\r\n        <Button variant=\"primary\" className=\"primary\">MOVE TO HUMAN</Button><br />\r\n        <div  style={{height:\"300px\",overflowY:\"auto\"}}>\r\n          <ul style={{listStyle:\"none\"}}>\r\n           <Row style={{marginTop:\"10px;\"}}> \r\n           <Row >     \r\n            {\r\n            this.state.data!==null && this.state.data.map((item) => {\r\n                return(item.group==\"human\" ?\r\n                <Col onClick={()=>checkClickfun(item.id,\"human\")}  id={item.id}><li><img src=\"human.jpg\" className=\"img \"  /></li> </Col>:\"\" )\r\n                }) \r\n            }   \r\n           </Row>\r\n           </Row>\r\n\r\n          </ul>\r\n        </div>\r\n        </Container>\r\n      )  \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}