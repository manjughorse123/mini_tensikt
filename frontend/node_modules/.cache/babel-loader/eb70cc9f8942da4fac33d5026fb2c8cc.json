{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Desktop/reactproject/frontend/src/components/Resource.jsx\";\nimport { Component } from \"react\";\nimport getResource from \"../actions/GetResource\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport Transfer from \"../actions/Transfer\";\nimport { getapi, header, imgapi } from \"../constant\";\nimport \"../app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Resource extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkClickfun = dd => {\n      if (this.state.checkClick == false) {\n        this.setState({\n          checkClick: true\n        });\n        document.getElementById(dd.id).classList.add(\"applyonselect\");\n\n        if (dd.group == this.state.transfer.group) {\n          this.state.transfer.tdata.push(dd);\n          this.setState({\n            tdata: this.state.transfer.tdata\n          });\n        } else if (dd.group = this.state.transfer.group && this.state.transfer.tdata != []) {\n          this.state.transfer.tdata = [];\n          this.state.transfer.tdata.push(dd);\n          this.setState({\n            tdata: this.state.transfer.tdata\n          });\n        } else {\n          this.state.transfer.tdata.push(dd);\n          this.setState({\n            tdata: this.state.transfer.tdata\n          });\n        }\n\n        this.setState(this.state.transfer.group = dd.group);\n      } else {\n        this.setState({\n          checkClick: false\n        });\n        document.getElementById(dd.id).classList.remove(\"applyonselect\");\n        let newelm = this.state.transfer.ids.filter(function (id) {\n          return id !== id;\n        });\n        this.setState({});\n      }\n    };\n\n    this.transferData = async () => {\n      const res = await Transfer(this.state.transfer);\n      console.log(res);\n    };\n\n    this.state = {\n      data: null,\n      total: 0,\n      checkClick: false,\n      transfer: {\n        group: \"\",\n        tdata: [{}]\n      }\n    };\n  } // make selectable\n\n\n  async componentDidMount() {\n    let result = null;\n    let resp = null;\n    resp = await fetch(getapi, header).then(response => response.json()).then(function (res) {\n      result = res;\n    });\n    let imgdata = result.imgData;\n    let collect = [];\n    this.setState({\n      total: result.total\n    });\n\n    for (let i = 0; i < this.state.total; i++) {\n      collect[i] = imgdata[i];\n    }\n\n    this.setState({\n      data: collect\n    });\n    console.log(collect);\n  } // setData =  async() => await getResource();\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"primary\",\n        onClick: this.transferData,\n        children: \"MOVE TO TERMINATOR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"300px\",\n          overflowY: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: this.state.data !== null && this.state.data.map(item => {\n              let id = item.id;\n              let filepath = item.filepath;\n              let group = item.group;\n              let isclicked = item.isclicked;\n              let title = item.title;\n              return item.group == \"terminator\" ? /*#__PURE__*/_jsxDEV(Col, {\n                onClick: () => this.checkClickfun({\n                  filepath,\n                  group,\n                  id,\n                  isclicked,\n                  title\n                }),\n                id: item.id,\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: imgapi + item.id,\n                    className: \"img \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 110\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 106\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this) : \"\";\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"primary\",\n        onClick: this.transferData,\n        children: \"MOVE TO HUMAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 105\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"300px\",\n          overflowY: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              marginTop: \"10px;\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: this.state.data !== null && this.state.data.map(item => {\n                let id = item.id;\n                let filepath = item.filepath;\n                let group = item.group;\n                let isclicked = item.isclicked;\n                let title = item.title;\n                return item.group == \"human\" ? /*#__PURE__*/_jsxDEV(Col, {\n                  onClick: () => this.checkClickfun({\n                    filepath,\n                    group,\n                    id,\n                    isclicked,\n                    title\n                  }),\n                  id: item.id,\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: imgapi + item.id,\n                      className: \"img \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 110\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 106\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 17\n                }, this) : \"\";\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lenovo/Desktop/reactproject/frontend/src/components/Resource.jsx"],"names":["Component","getResource","Container","Row","Col","Button","Transfer","getapi","header","imgapi","Resource","constructor","props","checkClickfun","dd","state","checkClick","setState","document","getElementById","id","classList","add","group","transfer","tdata","push","remove","newelm","ids","filter","transferData","res","console","log","data","total","componentDidMount","result","resp","fetch","then","response","json","imgdata","imgData","collect","i","render","height","overflowY","listStyle","map","item","filepath","isclicked","title","marginTop"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport getResource from \"../actions/GetResource\";\r\nimport { Container,Row,Col,Button } from \"react-bootstrap\";\r\nimport Transfer from \"../actions/Transfer\";\r\nimport { getapi,header,imgapi } from \"../constant\"\r\nimport \"../app.css\";\r\nexport default class Resource extends Component{\r\n   \r\n    constructor(props){\r\n     super(props) \r\n     this.state = {data:null,total:0,checkClick:false,transfer:{group:\"\",tdata:[{}]}}\r\n    }\r\n    \r\n    // make selectable\r\n     checkClickfun = (dd)=>{\r\n     if(this.state.checkClick==false){\r\n       this.setState({checkClick:true});\r\n       document.getElementById(dd.id).classList.add(\"applyonselect\")\r\n       \r\n       if(dd.group==this.state.transfer.group){\r\n        this.state.transfer.tdata.push(dd)\r\n        this.setState({tdata:this.state.transfer.tdata})\r\n       \r\n     \r\n      }else if(dd.group=this.state.transfer.group && this.state.transfer.tdata!=[]){\r\n       \r\n        this.state.transfer.tdata=[];\r\n        this.state.transfer.tdata.push(dd)\r\n        this.setState({tdata:this.state.transfer.tdata})\r\n       }else{\r\n        this.state.transfer.tdata.push(dd)\r\n        this.setState({tdata:this.state.transfer.tdata})\r\n        \r\n       }\r\n       this.setState(this.state.transfer.group=dd.group)\r\n     }else{\r\n       this.setState({checkClick:false});\r\n       document.getElementById(dd.id).classList.remove(\"applyonselect\")\r\n       let newelm=this.state.transfer.ids.filter(function(id) { \r\n        return id !== id \r\n       })\r\n       this.setState({\r\n     });    \r\n     }\r\n   }\r\n    async componentDidMount(){\r\n      let result=null;\r\n      let resp=null;\r\n      resp = await fetch(getapi,header)\r\n      .then(response => response.json()).then(function(res){\r\n        result =res\r\n       });\r\n       let imgdata=result.imgData;\r\n       let collect=[];\r\n       this.setState({total:result.total});\r\n       for(let i=0;i<this.state.total;i++){\r\n         collect[i] = imgdata[i]\r\n       }\r\n       this.setState({data:collect});\r\n       console.log(collect)\r\n    }\r\n\r\n    // setData =  async() => await getResource();\r\n\r\n    transferData = async()=>{\r\n     const res=await Transfer(this.state.transfer);\r\n     console.log(res);\r\n    }\r\n    render(){\r\n      return(\r\n        <Container>  \r\n        <Button variant=\"primary\" className=\"primary\" onClick={this.transferData}>MOVE TO TERMINATOR</Button>\r\n        <div  style={{height:\"300px\",overflowY:\"auto\"}}>\r\n          <ul style={{listStyle:\"none\"}}>\r\n          <Row >     \r\n            {\r\n            this.state.data!==null && this.state.data.map((item) => {\r\n                 let id=item.id\r\n                 let filepath=item.filepath\r\n                 let group=item.group\r\n                 let isclicked = item.isclicked\r\n                 let title = item.title\r\n                 return(item.group==\"terminator\" ?\r\n                <Col onClick={()=>this.checkClickfun({filepath,group,id,isclicked,title})}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>:\"\" )\r\n                }) \r\n            }   \r\n           </Row>\r\n\r\n          </ul>\r\n        </div>\r\n        <Button variant=\"primary\" className=\"primary\" onClick={this.transferData}>MOVE TO HUMAN</Button><br />\r\n        <div  style={{height:\"300px\",overflowY:\"auto\"}}>\r\n          <ul style={{listStyle:\"none\"}}>\r\n           <Row style={{marginTop:\"10px;\"}}> \r\n           <Row >     \r\n            {\r\n            this.state.data!==null && this.state.data.map((item) => {\r\n              let id=item.id\r\n              let filepath=item.filepath\r\n              let group=item.group\r\n              let isclicked = item.isclicked\r\n              let title = item.title\r\n                return(item.group==\"human\" ?\r\n                <Col onClick={()=>this.checkClickfun({filepath,group,id,isclicked,title})}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>:\"\" )\r\n                }) \r\n            }   \r\n           </Row>\r\n           </Row>\r\n\r\n          </ul>\r\n        </div>\r\n        </Container>\r\n      )  \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}