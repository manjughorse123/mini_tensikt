{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Desktop/reactproject/frontend/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Alert from \"@mui/material/Alert\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { getapi, header, imgapi, transapi } from \"./constant\";\nimport \"./app.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Viewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkClickfun = dd => {\n      if (this.state.checkClick == false) {\n        this.setState({\n          checkClick: true\n        });\n        this.setState({\n          gr: dd.group\n        });\n        document.getElementById(dd.id).classList.add(\"applyonselect\");\n\n        if (dd.group == \"terminator\") {\n          this.state.transfer.selectedHuman.push(dd);\n          this.setState({\n            selectedHuman: this.state.transfer.selectedHuman\n          });\n        }\n\n        if (dd.group == \"human\") {\n          this.state.transfer.selectedTermi.push(dd);\n          this.setState({\n            selectedTermi: this.state.transfer.selectedTermi\n          });\n        }\n      } else {\n        this.setState({\n          checkClick: false\n        });\n        console.log(this.state.checkClick);\n        document.getElementById(dd.id).classList.remove(\"applyonselect\");\n\n        if (dd.group == \"terminator\") {\n          let td = this.state.transfer.tdata;\n          td.map((item, index) => {\n            if (item.id == dd.id) {}\n          });\n          this.setState({\n            selectedHuman: this.state.transfer.selectedHuman\n          });\n        }\n\n        if (dd.group == \"human\") {\n          this.setState({\n            selectedHuman: this.state.transfer.selectedHuman\n          });\n        }\n      }\n    };\n\n    this.moveToTerminator = () => {\n      this.state.transfer.tdata = [...this.state.transfer.tdata, ...this.state.transfer.selectedHuman];\n      this.setState({\n        tdata: this.state.transfer.tdata\n      });\n      this.removeElement(this.state.transfer.selectedHuman);\n    };\n\n    this.moveToHuman = () => {\n      this.state.transfer.hdata = [...this.state.transfer.hdata, ...this.state.transfer.selectedTermi];\n      this.setState({\n        hdata: this.state.transfer.hdata\n      });\n      this.removeElement(this.state.transfer.selectedTermi);\n    };\n\n    this.removeElement = element => {\n      if (element[0].group == \"human\") {\n        let td = this.state.transfer.tdata;\n        element.forEach(item => {\n          this.state.transfer.tdata.map((ele, index) => {\n            if (item.id == ele.id) {\n              td.splice(index, 1);\n              document.getElementById(ele.id).classList.remove(\"applyonselect\");\n            }\n          });\n        });\n        this.setState({\n          tdata: td\n        });\n      }\n\n      if (element[0].group == \"terminator\") {\n        let hd = this.state.transfer.hdata;\n        element.forEach(item => {\n          this.state.transfer.hdata.map((ele, index) => {\n            if (item.id == ele.id) {\n              hd.splice(index, 1);\n              document.getElementById(ele.id).classList.remove(\"applyonselect\");\n            }\n          });\n        });\n        this.setState({\n          hdata: hd\n        });\n      }\n    };\n\n    this.saveData = () => {\n      let mdata = [...this.state.transfer.selectedHuman, ...this.state.transfer.selectedTermi];\n      console.log(mdata);\n      let arr = [];\n\n      if (mdata != null) {\n        mdata.forEach(item => {\n          if (item != null) {\n            arr[item.id] = item;\n          }\n        });\n        console.log(\"sdasdas\");\n        console.log(JSON.stringify(arr));\n        const response = axios({\n          method: \"POST\",\n          url: transapi,\n          data: {\n            \"imgMetadata\": {\n              \"103\": {\n                filepath: '103.jpg',\n                group: 'human',\n                id: '103',\n                isclicked: undefined,\n                title: 'image_103'\n              }\n            }\n          },\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n          }\n        });\n        console.log(response);\n        this.setState({\n          solved: true\n        });\n      }\n    };\n\n    this.state = {\n      solved: false,\n      data: null,\n      total: 0,\n      checkClick: false,\n      transfer: {\n        gr: \"\",\n        tdata: [],\n        hdata: [],\n        selectedHuman: [],\n        selectedTermi: []\n      }\n    };\n  }\n\n  async componentDidMount() {\n    let result = null;\n    let resp = null;\n    resp = await fetch(getapi, header).then(response => response.json()).then(function (res) {\n      result = res;\n    });\n    let imgdata = result.imgData;\n    let hcollect = [];\n    let tcollect = [];\n    this.setState({\n      total: result.total\n    });\n\n    for (let i = 0; i < this.state.total; i++) {\n      if (imgdata[i].group == \"terminator\") {\n        this.state.transfer.tdata.push(imgdata[i]);\n        this.setState({\n          tdata: this.state.transfer.tdata\n        });\n      }\n\n      if (imgdata[i].group == \"human\") {\n        this.state.transfer.hdata.push(imgdata[i]);\n        this.setState({\n          hdata: this.state.transfer.hdata\n        });\n      }\n    }\n  }\n\n  getObject(item) {\n    let id = item.id;\n    let filepath = item.filepath;\n    let group = item.group == \"human\" ? \"terminator\" : \"human\";\n    let isclicked = item.isclicked;\n    let title = item.title;\n    return {\n      filepath,\n      group,\n      id,\n      isclicked,\n      title\n    };\n  }\n\n  render() {\n    let showAlert = this.state.solved;\n    let alertContent;\n\n    if (showAlert) {\n      alertContent = /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: \"Thank you for saving humanity, Tenyksian!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this);\n    } else {\n      alertContent = /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        children: \"Humanity is in danger!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 22\n      }, this);\n    }\n\n    let content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [alertContent, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: this.saveData,\n        children: \"SAVE IMAGES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [\"Tenyks Mini-Project Submission\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [content, /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"primary\",\n          onClick: this.moveToHuman,\n          children: \"MOVE TO HUMAN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"300px\",\n            overflowY: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyle: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: this.state.transfer.tdata !== null && this.state.transfer.tdata.map(item => /*#__PURE__*/_jsxDEV(Col, {\n                onClick: () => this.checkClickfun(this.getObject(item)),\n                id: item.id,\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: imgapi + item.id,\n                    className: \"img \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 93\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 89\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"primary\",\n          onClick: this.moveToTerminator,\n          children: \" MOVE TO TERMINATOR \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 116\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"300px\",\n            overflowY: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyle: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: this.state.transfer.hdata !== null && this.state.transfer.hdata.map(item => /*#__PURE__*/_jsxDEV(Col, {\n                onClick: () => this.checkClickfun(this.getObject(item)),\n                id: item.id,\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: imgapi + item.id,\n                    className: \"img \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 93\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 89\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Viewer, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 221,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/lenovo/Desktop/reactproject/frontend/src/index.js"],"names":["React","ReactDOM","Alert","Container","Row","Col","Button","getapi","header","imgapi","transapi","axios","Viewer","Component","constructor","props","checkClickfun","dd","state","checkClick","setState","gr","group","document","getElementById","id","classList","add","transfer","selectedHuman","push","selectedTermi","console","log","remove","td","tdata","map","item","index","moveToTerminator","removeElement","moveToHuman","hdata","element","forEach","ele","splice","hd","saveData","mdata","arr","JSON","stringify","response","method","url","data","filepath","isclicked","undefined","title","headers","solved","total","componentDidMount","result","resp","fetch","then","json","res","imgdata","imgData","hcollect","tcollect","i","getObject","render","showAlert","alertContent","content","textAlign","height","overflowY","listStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Alert from \"@mui/material/Alert\";\nimport { Container,Row,Col,Button } from \"react-bootstrap\";\nimport { getapi,header,imgapi,transapi } from \"./constant\"\nimport \"./app.css\";\nimport axios from \"axios\";\nclass Viewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      solved: false,\n      data:null,total:0,checkClick:false,\n      transfer:{gr:\"\",tdata:[],hdata:[],selectedHuman:[],selectedTermi:[]}}\n    };\n\n    \n    // make selectable\n    checkClickfun = (dd)=>{\n      if(this.state.checkClick==false){\n      \n      this.setState({checkClick:true});\n      this.setState({gr:dd.group});\n\n      document.getElementById(dd.id).classList.add(\"applyonselect\")\n      if(dd.group==\"terminator\"){\n         this.state.transfer.selectedHuman.push(dd)\n         this.setState({selectedHuman:this.state.transfer.selectedHuman})\n\n      }\n      if(dd.group==\"human\"){\n       this.state.transfer.selectedTermi.push(dd)\n       this.setState({selectedTermi:this.state.transfer.selectedTermi})\n\n     }\n\n    }else{\n      this.setState({checkClick:false});\n      console.log(this.state.checkClick)\n      document.getElementById(dd.id).classList.remove(\"applyonselect\")\n      \n     if(dd.group==\"terminator\"){\n       let td = this.state.transfer.tdata\n       td.map((item,index) =>{\n          if(item.id==dd.id){\n              \n          }\n       })\n       this.setState({selectedHuman:this.state.transfer.selectedHuman})\n     \n      }\n     if(dd.group==\"human\"){\n       this.setState({selectedHuman:this.state.transfer.selectedHuman})\n\n     }   \n    }\n  }\n   async componentDidMount(){\n     let result=null;\n     let resp=null;\n     resp = await fetch(getapi,header)\n     .then(response => response.json()).then(function(res){\n       result =res\n      });\n      let imgdata=result.imgData;\n      let hcollect=[];let tcollect=[];\n      this.setState({total:result.total});\n      for(let i=0;i<this.state.total;i++){\n        if(imgdata[i].group==\"terminator\"){\n          this.state.transfer.tdata.push(imgdata[i]);\n          this.setState({tdata:this.state.transfer.tdata})\n        }\n        if(imgdata[i].group==\"human\"){\n         this.state.transfer.hdata.push(imgdata[i]);\n         this.setState({hdata:this.state.transfer.hdata})\n        }\n      }\n   \n      \n   }\n\n    moveToTerminator = ()=>{\n     this.state.transfer.tdata = [...this.state.transfer.tdata, ...this.state.transfer.selectedHuman]\n     this.setState({tdata:this.state.transfer.tdata})\n     this.removeElement(this.state.transfer.selectedHuman);\n    }\n    \n    moveToHuman = ()=>{\n       this.state.transfer.hdata = [...this.state.transfer.hdata, ...this.state.transfer.selectedTermi]\n       this.setState({hdata:this.state.transfer.hdata})\n       this.removeElement(this.state.transfer.selectedTermi);\n\n    }\n    removeElement = (element)=>{\n      \n     if(element[0].group==\"human\"){\n       let td=this.state.transfer.tdata;\n       element.forEach(item =>{\n        this.state.transfer.tdata.map((ele,index) => {\n          if(item.id==ele.id){\n            td.splice(index,1);  \n            document.getElementById(ele.id).classList.remove(\"applyonselect\")         \n          }\n        })\n       })\n    \n       this.setState({tdata:td});\n     }\n     if(element[0].group==\"terminator\"){\n       let hd = this.state.transfer.hdata;\n       element.forEach(item =>{\n        this.state.transfer.hdata.map((ele,index) => {\n          if(item.id==ele.id){\n            hd.splice(index,1);\n            document.getElementById(ele.id).classList.remove(\"applyonselect\")\n          }\n        })\n       })\n      \n       this.setState({hdata:hd});\n     }\n    }\n    getObject(item) {\n     let id=item.id\n     let filepath=item.filepath\n     let group=item.group==\"human\"?\"terminator\":\"human\";\n     let isclicked = item.isclicked\n     let title = item.title\n     return {filepath,group,id,isclicked,title} \n    }\n    saveData = () =>{\n    let  mdata = [...this.state.transfer.selectedHuman, ...this.state.transfer.selectedTermi]\n    console.log(mdata)\n    let arr = [];\n    if(mdata!=null){\n      mdata.forEach(item =>{\n        if(item!=null){\n         arr[item.id]=item\n        }\n      })\n      console.log(\"sdasdas\") \n      console.log(JSON.stringify(arr)) \n     const response  = axios({\n       method:\"POST\",\n       url:transapi,\n       data:{\"imgMetadata\":{\"103\":{filepath: '103.jpg', group: 'human', id: '103', isclicked: undefined, title: 'image_103'}}},\n       headers:{\n           \"Content-Type\":\"application/json\",\n           \"Accept\":\"application/json\"\n       }\n     })\n     console.log(response);\n     this.setState({solved:true});\n    }\n   }\n  render() {\n    let showAlert = this.state.solved;\n    let alertContent;\n\n    if (showAlert) {\n      alertContent = (\n        <Alert severity=\"success\">\n          Thank you for saving humanity, Tenyksian!\n        </Alert>\n      );\n    } else {\n      alertContent = <Alert severity=\"warning\">Humanity is in danger!</Alert>;\n    }\n\n    let content = (\n      <div>\n        {alertContent}\n        <Button variant=\"success\" onClick={this.saveData}>SAVE IMAGES</Button>  \n        <div style={{ textAlign: \"center\" }}>\n          Tenyks Mini-Project Submission{\" \"}\n        </div>\n        {/*  TODO: add generation of your viewer   */}\n      </div>\n    );\n\n    return (\n      <>\n        {content}\n\n        <Container>  \n       \n        <Button variant=\"primary\" className=\"primary\" onClick={this.moveToHuman}>MOVE TO HUMAN</Button>\n        <div  style={{height:\"300px\",overflowY:\"auto\"}}>\n          <ul style={{listStyle:\"none\"}}>\n          <Row >     \n            {\n            this.state.transfer.tdata!==null && this.state.transfer.tdata.map((item) => \n              <Col onClick={()=>this.checkClickfun(this.getObject(item))}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>\n            )\n            }   \n           </Row>\n          </ul>\n        </div>\n        <Button variant=\"primary\" className=\"primary\" onClick={this.moveToTerminator}> MOVE TO TERMINATOR </Button><br />\n        <div  style={{height:\"300px\",overflowY:\"auto\"}}>\n          <ul style={{listStyle:\"none\"}}>\n           <Row >     \n            {\n            this.state.transfer.hdata!==null && this.state.transfer.hdata.map((item) => \n              <Col onClick={()=>this.checkClickfun(this.getObject(item))}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>\n\n            )\n            }   \n           </Row>\n\n          </ul>\n        </div>\n\n        </Container>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<Viewer />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}