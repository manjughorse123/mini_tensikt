{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Desktop/reactproject/frontend/src/components/Resource.jsx\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport getResource from \"../actions/GetResource\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport Transfer from \"../actions/Transfer\";\nimport { getapi, header, imgapi } from \"../constant\";\nimport \"../app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Resource extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkClickfun = dd => {\n      if (this.state.checkClick == false) {\n        this.setState({\n          checkClick: true\n        });\n        this.setState({\n          gr: dd.group\n        });\n        document.getElementById(dd.id).classList.add(\"applyonselect\");\n\n        if (dd.group == \"terminator\") {\n          this.state.transfer.selectedTermi.push(dd);\n          this.setState({\n            selectedTermi: this.state.transfer.selectedTermi\n          });\n        }\n\n        if (dd.group == \"human\") {\n          this.state.transfer.selectedHuman.push(dd);\n          this.setState({\n            selectedHuman: this.state.transfer.selectedHuman\n          });\n        }\n      } else {\n        this.setState({\n          checkClick: false\n        });\n        document.getElementById(dd.id).classList.remove(\"applyonselect\");\n\n        if (dd.group == \"terminator\") {\n          let res = this.state.transfer.selectedTermi.filter(item => item != dd);\n          this.state.transfer.selectedTermi = [];\n          this.setState({\n            selectedTermi: this.state.transfer.selectedTermi\n          });\n          this.state.transfer.selectedTermi.push(res);\n          this.setState({\n            selectedTermi: this.state.transfer.selectedTermi\n          });\n        }\n\n        if (dd.group == \"human\") {\n          let res = this.state.transfer.selectedHuman.filter(item => item != dd);\n          this.state.transfer.selectedHuman = [];\n          this.setState({\n            selectedHuman: this.state.transfer.selectedHuman\n          });\n          this.state.transfer.selectedHuman.push(res);\n          this.setState({\n            selectedHuman: this.state.transfer.selectedHuman\n          });\n        }\n      }\n    };\n\n    this.moveToTerminator = () => {\n      // console.log(this.state.transfer.selectedHuman);\n      this.state.transfer.selectedHuman != null && this.state.transfer.selectedHuman.map(item => {\n        let res = this.state.transfer.selectedHuman.filter(item1 => item1 != item);\n        this.state.transfer.hdata = [];\n        this.setState({\n          hdata: this.state.transfer.hdata\n        });\n        this.state.transfer.hdata = res;\n        this.setState({\n          hdata: this.state.transfer.hdata\n        });\n        item.group = \"terminator\";\n        document.getElementById('appendTerm').appendChild( /*#__PURE__*/_jsxDEV(Col, {\n          onClick: () => this.checkClickfun(this.getObject(item)),\n          id: item.id,\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imgapi + item.id,\n              className: \"img \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 137\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 133\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 59\n        }, this));\n      });\n    };\n\n    this.moveToHuman = () => {\n      // this.state.transfer.selectedTermi!=null && this.state.transfer.selectedTermi\n      // let comp = this.state.transfer.selectedTermi!=null && this.state.transfer.selectedTermi.map(item => {\n      //   let res = this.state.transfer.selectedTermi.filter( item1 => item1 != item);\n      //   this.state.transfer.tdata=[];\n      //   this.setState({tdata:this.state.transfer.tdata}); \n      //   this.state.transfer.tdata=res;\n      //   this.setState({tdata:this.state.transfer.tdata});  \n      //   item.group=\"human\";\n      //   return(<Col onClick={()=>this.checkClickfun(this.getObject(item))}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>)\n      //  })\n      let child = \"\";\n\n      if (this.state.transfer.selectedTermi != null) {\n        this.state.transfer.selectedTermi.forEach(item => {\n          child += /*#__PURE__*/_jsxDEV(Col, {\n            onClick: () => this.checkClickfun(this.getObject(item)),\n            id: item.id,\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imgapi + item.id,\n                className: \"img \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 98\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 94\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 20\n          }, this);\n          let res = this.state.transfer.selectedTermi.filter(item1 => item1 != item); // this.state.transfer.tdata=[];\n\n          console.log(res);\n        });\n        this.setState({\n          tdata: this.state.transfer.tdata\n        });\n        this.state.transfer.tdata = res;\n        this.setState({\n          tdata: this.state.transfer.tdata\n        });\n      }\n\n      console.log(child); //  document.getElementById('appendTerm').innerHTML = cmp\n\n      ReactDOM.render(child, document.getElementById('appendHuman'));\n    };\n\n    this.state = {\n      data: null,\n      total: 0,\n      checkClick: false,\n      transfer: {\n        gr: \"\",\n        tdata: [],\n        hdata: [],\n        selectedHuman: [],\n        selectedTermi: []\n      }\n    };\n  } // make selectable\n\n\n  async componentDidMount() {\n    let result = null;\n    let resp = null;\n    resp = await fetch(getapi, header).then(response => response.json()).then(function (res) {\n      result = res;\n    });\n    let imgdata = result.imgData;\n    let hcollect = [];\n    let tcollect = [];\n    this.setState({\n      total: result.total\n    });\n\n    for (let i = 0; i < this.state.total; i++) {\n      if (imgdata[i].group == \"terminator\") {\n        this.state.transfer.tdata.push(imgdata[i]);\n        this.setState({\n          tdata: this.state.transfer.tdata\n        });\n      }\n\n      if (imgdata[i].group == \"human\") {\n        this.state.transfer.hdata.push(imgdata[i]);\n        this.setState({\n          hdata: this.state.transfer.hdata\n        });\n      }\n    }\n  } // setData =  async() => await getResource();\n\n\n  getObject(item) {\n    let id = item.id;\n    let filepath = item.filepath;\n    let group = item.group;\n    let isclicked = item.isclicked;\n    let title = item.title;\n    return {\n      filepath,\n      group,\n      id,\n      isclicked,\n      title\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"primary\",\n        onClick: this.moveToHuman,\n        children: \"MOVE TO HUMAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"300px\",\n          overflowY: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: this.state.transfer.tdata !== null && this.state.transfer.tdata.map(item => {\n              return item.group == \"terminator\" ? /*#__PURE__*/_jsxDEV(Col, {\n                onClick: () => this.checkClickfun(this.getObject(item)),\n                id: item.id,\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: imgapi + item.id,\n                    className: \"img \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 93\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 89\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 15\n              }, this) : \"\";\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            id: \"appendTerm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"primary\",\n        onClick: this.moveToTerminator,\n        children: \" MOVE TO TERMINATOR \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 116\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"300px\",\n          overflowY: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: this.state.transfer.hdata !== null && this.state.transfer.hdata.map(item => {\n              return item.group == \"human\" ? /*#__PURE__*/_jsxDEV(Col, {\n                onClick: () => this.checkClickfun(this.getObject(item)),\n                id: item.id,\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: imgapi + item.id,\n                    className: \"img \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 93\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 89\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 15\n              }, this) : \"\";\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            id: \"appendHuman\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lenovo/Desktop/reactproject/frontend/src/components/Resource.jsx"],"names":["React","Component","ReactDOM","getResource","Container","Row","Col","Button","Transfer","getapi","header","imgapi","Resource","constructor","props","checkClickfun","dd","state","checkClick","setState","gr","group","document","getElementById","id","classList","add","transfer","selectedTermi","push","selectedHuman","remove","res","filter","item","moveToTerminator","map","item1","hdata","appendChild","getObject","moveToHuman","child","forEach","console","log","tdata","render","data","total","componentDidMount","result","resp","fetch","then","response","json","imgdata","imgData","hcollect","tcollect","i","filepath","isclicked","title","height","overflowY","listStyle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\"\r\nimport getResource from \"../actions/GetResource\";\r\nimport { Container,Row,Col,Button } from \"react-bootstrap\";\r\nimport Transfer from \"../actions/Transfer\";\r\nimport { getapi,header,imgapi } from \"../constant\"\r\nimport \"../app.css\";\r\nexport default class Resource extends Component{\r\n   \r\n    constructor(props){\r\n     super(props) \r\n     this.state = {data:null,total:0,checkClick:false,\r\n      transfer:{gr:\"\",tdata:[],hdata:[],selectedHuman:[],selectedTermi:[]}}\r\n    }\r\n    \r\n    // make selectable\r\n      checkClickfun = (dd)=>{\r\n       if(this.state.checkClick==false){\r\n       \r\n       this.setState({checkClick:true});\r\n       this.setState({gr:dd.group});\r\n\r\n       document.getElementById(dd.id).classList.add(\"applyonselect\")\r\n       if(dd.group==\"terminator\"){\r\n          this.state.transfer.selectedTermi.push(dd)\r\n          this.setState({selectedTermi:this.state.transfer.selectedTermi})\r\n       }\r\n       if(dd.group==\"human\"){\r\n        this.state.transfer.selectedHuman.push(dd)\r\n        this.setState({selectedHuman:this.state.transfer.selectedHuman})\r\n      }\r\n\r\n     }else{\r\n       this.setState({checkClick:false});\r\n       document.getElementById(dd.id).classList.remove(\"applyonselect\")\r\n      if(dd.group==\"terminator\"){\r\n        let res = this.state.transfer.selectedTermi.filter( item => item != dd); \r\n        this.state.transfer.selectedTermi=[];\r\n        this.setState({selectedTermi:this.state.transfer.selectedTermi})\r\n        this.state.transfer.selectedTermi.push(res)\r\n        this.setState({selectedTermi:this.state.transfer.selectedTermi})\r\n       }\r\n      if(dd.group==\"human\"){\r\n        let res = this.state.transfer.selectedHuman.filter( item => item != dd); \r\n        this.state.transfer.selectedHuman=[];\r\n        this.setState({selectedHuman:this.state.transfer.selectedHuman})\r\n        this.state.transfer.selectedHuman.push(res)\r\n        this.setState({selectedHuman:this.state.transfer.selectedHuman})\r\n      }   \r\n     }\r\n   }\r\n    async componentDidMount(){\r\n      let result=null;\r\n      let resp=null;\r\n      resp = await fetch(getapi,header)\r\n      .then(response => response.json()).then(function(res){\r\n        result =res\r\n       });\r\n       let imgdata=result.imgData;\r\n       let hcollect=[];let tcollect=[];\r\n       this.setState({total:result.total});\r\n       for(let i=0;i<this.state.total;i++){\r\n         if(imgdata[i].group==\"terminator\"){\r\n           this.state.transfer.tdata.push(imgdata[i]);\r\n           this.setState({tdata:this.state.transfer.tdata})\r\n         }\r\n         if(imgdata[i].group==\"human\"){\r\n          this.state.transfer.hdata.push(imgdata[i]);\r\n          this.setState({hdata:this.state.transfer.hdata})\r\n         }\r\n       }\r\n    \r\n       \r\n    }\r\n\r\n    // setData =  async() => await getResource();\r\n\r\n     moveToTerminator = ()=>{\r\n      // console.log(this.state.transfer.selectedHuman);\r\n       this.state.transfer.selectedHuman!=null && this.state.transfer.selectedHuman.map(item => {\r\n        let res = this.state.transfer.selectedHuman.filter( item1 => item1 != item);\r\n        this.state.transfer.hdata=[];\r\n        this.setState({hdata:this.state.transfer.hdata}); \r\n        this.state.transfer.hdata=res;\r\n        this.setState({hdata:this.state.transfer.hdata});  \r\n        item.group=\"terminator\";\r\n        document.getElementById('appendTerm').appendChild(<Col onClick={()=>this.checkClickfun(this.getObject(item))}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>)\r\n        });\r\n\r\n     }\r\n     \r\n     moveToHuman = ()=>{\r\n      // this.state.transfer.selectedTermi!=null && this.state.transfer.selectedTermi\r\n      // let comp = this.state.transfer.selectedTermi!=null && this.state.transfer.selectedTermi.map(item => {\r\n      //   let res = this.state.transfer.selectedTermi.filter( item1 => item1 != item);\r\n      //   this.state.transfer.tdata=[];\r\n      //   this.setState({tdata:this.state.transfer.tdata}); \r\n      //   this.state.transfer.tdata=res;\r\n      //   this.setState({tdata:this.state.transfer.tdata});  \r\n      //   item.group=\"human\";\r\n        \r\n      //   return(<Col onClick={()=>this.checkClickfun(this.getObject(item))}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>)\r\n        \r\n      //  })\r\n       let child=\"\";\r\n       if(this.state.transfer.selectedTermi!=null){\r\n        this.state.transfer.selectedTermi.forEach(item =>{\r\n          child += <Col onClick={()=>this.checkClickfun(this.getObject(item))}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>\r\n          let res = this.state.transfer.selectedTermi.filter( item1 => item1 != item);\r\n          // this.state.transfer.tdata=[];\r\n          console.log(res);\r\n       \r\n       \r\n        })\r\n        this.setState({tdata:this.state.transfer.tdata}); \r\n        this.state.transfer.tdata=res;\r\n        this.setState({tdata:this.state.transfer.tdata}); \r\n       }\r\n     \r\n       console.log(child)\r\n      //  document.getElementById('appendTerm').innerHTML = cmp\r\n      ReactDOM.render(child,document.getElementById('appendHuman'))\r\n        \r\n\r\n     }\r\n\r\n     getObject(item) {\r\n      let id=item.id\r\n      let filepath=item.filepath\r\n      let group=item.group;\r\n      let isclicked = item.isclicked\r\n      let title = item.title\r\n      return {filepath,group,id,isclicked,title} \r\n     }\r\n      render(){\r\n      return(\r\n        <Container>  \r\n        <Button variant=\"primary\" className=\"primary\" onClick={this.moveToHuman}>MOVE TO HUMAN</Button>\r\n        <div  style={{height:\"300px\",overflowY:\"auto\"}}>\r\n          <ul style={{listStyle:\"none\"}}>\r\n          <Row >     \r\n            {\r\n            this.state.transfer.tdata!==null && this.state.transfer.tdata.map((item) => {\r\n              return(item.group==\"terminator\" ?\r\n              <Col onClick={()=>this.checkClickfun(this.getObject(item))}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>:\"\" )\r\n            }) \r\n            }   \r\n           </Row>\r\n           <Row id=\"appendTerm\">\r\n           </Row>\r\n          </ul>\r\n        </div>\r\n        <Button variant=\"primary\" className=\"primary\" onClick={this.moveToTerminator}> MOVE TO TERMINATOR </Button><br />\r\n        <div  style={{height:\"300px\",overflowY:\"auto\"}}>\r\n          <ul style={{listStyle:\"none\"}}>\r\n           <Row >     \r\n            {\r\n            this.state.transfer.hdata!==null && this.state.transfer.hdata.map((item) => {\r\n              return(item.group==\"human\" ?\r\n              <Col onClick={()=>this.checkClickfun(this.getObject(item))}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>:\"\" )\r\n              }) \r\n            }   \r\n           </Row>\r\n           <Row id=\"appendHuman\">\r\n           </Row>\r\n\r\n          </ul>\r\n        </div>\r\n        </Container>\r\n      )  \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}