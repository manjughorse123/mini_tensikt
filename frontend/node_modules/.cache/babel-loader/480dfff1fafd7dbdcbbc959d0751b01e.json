{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Desktop/reactproject/frontend/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Alert from \"@mui/material/Alert\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { getapi, header, imgapi, transapi } from \"./constant\";\nimport \"./app.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Viewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkClickfun = dd => {\n      if (this.state.checkClick == false) {\n        this.setState({\n          checkClick: true\n        });\n        this.setState({\n          gr: dd.group\n        });\n        document.getElementById(dd.id).classList.add(\"applyonselect\");\n\n        if (dd.group == \"terminator\") {\n          this.state.transfer.selectedHuman.push(dd);\n          let sh = Array.from(new Set(this.state.transfer.selectedHuman));\n          console.log(sh);\n          this.setState({\n            selectedHuman: sh\n          });\n        }\n\n        if (dd.group == \"human\") {\n          this.state.transfer.selectedTermi.push(dd);\n          let st = Array.from(new Set(this.state.transfer.selectedTermi));\n          this.setState({\n            selectedTermi: st\n          });\n        }\n      } else {\n        this.setState({\n          checkClick: false\n        });\n        document.getElementById(dd.id).classList.remove(\"applyonselect\");\n        console.log(\"human\");\n        console.log(this.state.transfer.selectedHuman);\n        console.log(\"termin\");\n        console.log(this.state.transfer.selectedTermi);\n\n        if (dd.group == \"terminator\") {\n          let td = this.state.transfer.selectedTermi;\n          this.state.transfer.selectedTermi.map((item, index) => {\n            if (item.id == dd.id) {\n              td.splice(index, 1);\n            }\n          });\n          console.log(td);\n          this.setState({\n            selectedTermi: td\n          });\n        }\n\n        if (dd.group == \"human\") {\n          let td = this.state.transfer.selectedHuman;\n          this.state.transfer.selectedHuman.map((item, index) => {\n            if (item.id == dd.id) {\n              td.splice(index, 1);\n            }\n          });\n          console.log(td);\n          this.setState({\n            selectedHuman: td\n          });\n        }\n      }\n    };\n\n    this.moveToTerminator = () => {\n      this.state.transfer.tdata = [...this.state.transfer.tdata, ...this.state.transfer.selectedHuman];\n      this.setState({\n        tdata: this.state.transfer.tdata\n      });\n      this.removeElement(this.state.transfer.selectedHuman);\n    };\n\n    this.moveToHuman = () => {\n      this.state.transfer.hdata = [...this.state.transfer.hdata, ...this.state.transfer.selectedTermi];\n      this.setState({\n        hdata: this.state.transfer.hdata\n      });\n      this.removeElement(this.state.transfer.selectedTermi);\n    };\n\n    this.removeElement = element => {\n      if (element[0].group == \"human\") {\n        let td = this.state.transfer.tdata;\n        element.forEach(item => {\n          this.state.transfer.tdata.map((ele, index) => {\n            if (item.id == ele.id) {\n              td.splice(index, 1);\n              document.getElementById(ele.id).classList.remove(\"applyonselect\");\n            }\n          });\n        });\n        this.setState({\n          tdata: td\n        });\n      }\n\n      if (element[0].group == \"terminator\") {\n        let hd = this.state.transfer.hdata;\n        element.forEach(item => {\n          this.state.transfer.hdata.map((ele, index) => {\n            if (item.id == ele.id) {\n              hd.splice(index, 1);\n              document.getElementById(ele.id).classList.remove(\"applyonselect\");\n            }\n          });\n        });\n        this.setState({\n          hdata: hd\n        });\n      }\n    };\n\n    this.saveData = () => {\n      let mdata = [...this.state.transfer.selectedHuman, ...this.state.transfer.selectedTermi];\n      var arr = {};\n\n      if (mdata != null) {\n        mdata.map(item => {\n          if (item != null) {\n            let id = item.id;\n            arr[id] = item;\n            console.log(arr);\n          }\n        });\n        const response = axios({\n          method: \"POST\",\n          url: transapi,\n          data: {\n            \"imgMetadata\": {\n              \"103\": {\n                filepath: '103.jpg',\n                group: 'human',\n                id: '103',\n                isclicked: undefined,\n                title: 'image_103'\n              }\n            }\n          },\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\"\n          }\n        });\n        console.log(response);\n        this.setState({\n          solved: true\n        });\n      }\n    };\n\n    this.state = {\n      solved: false,\n      data: null,\n      total: 0,\n      checkClick: false,\n      transfer: {\n        gr: \"\",\n        tdata: [],\n        hdata: [],\n        selectedHuman: [],\n        selectedTermi: []\n      }\n    };\n  }\n\n  async componentDidMount() {\n    let result = null;\n    let resp = null;\n    resp = await fetch(getapi, header).then(response => response.json()).then(function (res) {\n      result = res;\n    });\n    let imgdata = result.imgData;\n    let hcollect = [];\n    let tcollect = [];\n    this.setState({\n      total: result.total\n    });\n\n    for (let i = 0; i < this.state.total; i++) {\n      if (imgdata[i].group == \"terminator\") {\n        this.state.transfer.tdata.push(imgdata[i]);\n        this.setState({\n          tdata: this.state.transfer.tdata\n        });\n      }\n\n      if (imgdata[i].group == \"human\") {\n        this.state.transfer.hdata.push(imgdata[i]);\n        this.setState({\n          hdata: this.state.transfer.hdata\n        });\n      }\n    }\n  }\n\n  getObject(item) {\n    let id = item.id;\n    let filepath = item.filepath;\n    let group = item.group == \"human\" ? \"terminator\" : \"human\";\n    let isclicked = item.isclicked;\n    let title = item.title;\n    return {\n      filepath,\n      group,\n      id,\n      isclicked,\n      title\n    };\n  }\n\n  render() {\n    let showAlert = this.state.solved;\n    let alertContent;\n\n    if (showAlert) {\n      alertContent = /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        children: \"Thank you for saving humanity, Tenyksian!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this);\n    } else {\n      alertContent = /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        children: \"Humanity is in danger!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 22\n      }, this);\n    }\n\n    let content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [alertContent, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: this.saveData,\n        children: \"SAVE IMAGES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [\"Tenyks Mini-Project Submission\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [content, /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"primary\",\n          onClick: this.moveToHuman,\n          children: \"MOVE TO HUMAN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"300px\",\n            overflowY: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyle: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: this.state.transfer.tdata !== null && this.state.transfer.tdata.map(item => /*#__PURE__*/_jsxDEV(Col, {\n                onClick: () => this.checkClickfun(this.getObject(item)),\n                id: item.id,\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: imgapi + item.id,\n                    className: \"img \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 93\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 89\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \"primary\",\n          onClick: this.moveToTerminator,\n          children: \" MOVE TO TERMINATOR \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 116\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"300px\",\n            overflowY: \"auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyle: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: this.state.transfer.hdata !== null && this.state.transfer.hdata.map(item => /*#__PURE__*/_jsxDEV(Col, {\n                onClick: () => this.checkClickfun(this.getObject(item)),\n                id: item.id,\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: imgapi + item.id,\n                    className: \"img \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 93\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 89\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Viewer, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 235,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/lenovo/Desktop/reactproject/frontend/src/index.js"],"names":["React","ReactDOM","Alert","Container","Row","Col","Button","getapi","header","imgapi","transapi","axios","Viewer","Component","constructor","props","checkClickfun","dd","state","checkClick","setState","gr","group","document","getElementById","id","classList","add","transfer","selectedHuman","push","sh","Array","from","Set","console","log","selectedTermi","st","remove","td","map","item","index","splice","moveToTerminator","tdata","removeElement","moveToHuman","hdata","element","forEach","ele","hd","saveData","mdata","arr","response","method","url","data","filepath","isclicked","undefined","title","headers","solved","total","componentDidMount","result","resp","fetch","then","json","res","imgdata","imgData","hcollect","tcollect","i","getObject","render","showAlert","alertContent","content","textAlign","height","overflowY","listStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Alert from \"@mui/material/Alert\";\nimport { Container,Row,Col,Button } from \"react-bootstrap\";\nimport { getapi,header,imgapi,transapi } from \"./constant\"\nimport \"./app.css\";\nimport axios from \"axios\";\nclass Viewer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      solved: false,\n      data:null,total:0,checkClick:false,\n      transfer:{gr:\"\",tdata:[],hdata:[],selectedHuman:[],selectedTermi:[]}}\n    };\n\n    \n    // make selectable\n    checkClickfun = (dd)=>{\n      if(this.state.checkClick==false){\n      \n      this.setState({checkClick:true});\n      this.setState({gr:dd.group});\n\n      document.getElementById(dd.id).classList.add(\"applyonselect\")\n      if(dd.group==\"terminator\"){\n         this.state.transfer.selectedHuman.push(dd)\n         let sh=Array.from(new Set(this.state.transfer.selectedHuman));\n         console.log(sh)\n         this.setState({selectedHuman:sh})\n\n      }\n      if(dd.group==\"human\"){\n       this.state.transfer.selectedTermi.push(dd)\n       let st = Array.from(new Set(this.state.transfer.selectedTermi));\n       this.setState({selectedTermi:st})\n\n     }\n\n    }else{\n      this.setState({checkClick:false});\n      document.getElementById(dd.id).classList.remove(\"applyonselect\")\n      console.log(\"human\");\n      console.log(this.state.transfer.selectedHuman)\n      console.log(\"termin\");\n      console.log(this.state.transfer.selectedTermi)\n     if(dd.group==\"terminator\"){\n       let td = this.state.transfer.selectedTermi\n       this.state.transfer.selectedTermi.map((item,index) =>{\n          if(item.id==dd.id){\n            td.splice(index,1);  \n          }\n       })\n       console.log(td)\n       this.setState({selectedTermi:td})\n     \n      }\n     if(dd.group==\"human\"){\n      let td = this.state.transfer.selectedHuman\n      this.state.transfer.selectedHuman.map((item,index) =>{\n         if(item.id==dd.id){\n           td.splice(index,1);  \n         }\n      })\n       console.log(td)\n       this.setState({selectedHuman:td})\n\n     }   \n    }\n  }\n\n   async componentDidMount(){\n     let result=null;\n     let resp=null;\n     resp = await fetch(getapi,header)\n     .then(response => response.json()).then(function(res){\n       result =res\n      });\n      let imgdata=result.imgData;\n      let hcollect=[];let tcollect=[];\n      this.setState({total:result.total});\n      for(let i=0;i<this.state.total;i++){\n        if(imgdata[i].group==\"terminator\"){\n          this.state.transfer.tdata.push(imgdata[i]);\n          this.setState({tdata:this.state.transfer.tdata})\n        }\n        if(imgdata[i].group==\"human\"){\n         this.state.transfer.hdata.push(imgdata[i]);\n         this.setState({hdata:this.state.transfer.hdata})\n        }\n      }\n   \n      \n   }\n\n    moveToTerminator = ()=>{\n     this.state.transfer.tdata = [...this.state.transfer.tdata, ...this.state.transfer.selectedHuman]\n     this.setState({tdata:this.state.transfer.tdata})\n     this.removeElement(this.state.transfer.selectedHuman);\n    }\n    \n    moveToHuman = ()=>{\n       this.state.transfer.hdata = [...this.state.transfer.hdata, ...this.state.transfer.selectedTermi]\n       this.setState({hdata:this.state.transfer.hdata})\n       this.removeElement(this.state.transfer.selectedTermi);\n\n    }\n    removeElement = (element)=>{\n      \n     if(element[0].group==\"human\"){\n       let td=this.state.transfer.tdata;\n       element.forEach(item =>{\n        this.state.transfer.tdata.map((ele,index) => {\n          if(item.id==ele.id){\n            td.splice(index,1);  \n            document.getElementById(ele.id).classList.remove(\"applyonselect\")         \n          }\n        })\n       })\n    \n       this.setState({tdata:td});\n     }\n     if(element[0].group==\"terminator\"){\n       let hd = this.state.transfer.hdata;\n       element.forEach(item =>{\n        this.state.transfer.hdata.map((ele,index) => {\n          if(item.id==ele.id){\n            hd.splice(index,1);\n            document.getElementById(ele.id).classList.remove(\"applyonselect\")\n          }\n        })\n       })\n      \n       this.setState({hdata:hd});\n     }\n    }\n    getObject(item) {\n     let id=item.id\n     let filepath=item.filepath\n     let group=item.group==\"human\"?\"terminator\":\"human\";\n     let isclicked = item.isclicked\n     let title = item.title\n     return {filepath,group,id,isclicked,title} \n    }\n    saveData = () =>{\n    let  mdata = [...this.state.transfer.selectedHuman, ...this.state.transfer.selectedTermi]\n    var arr = {};\n    if(mdata!=null){\n      mdata.map(item =>{\n        if(item!=null){\n          let id =item.id\n          arr[id]=item\n          console.log(arr)\n        }\n      })\n\n     const response  = axios({\n       method:\"POST\",\n       url:transapi,\n       data:{\"imgMetadata\":{\"103\":{filepath: '103.jpg', group: 'human', id: '103', isclicked: undefined, title: 'image_103'}}},\n       headers:{\n           \"Content-Type\":\"application/json\",\n           \"Accept\":\"application/json\"\n       }\n     })\n     console.log(response);\n     this.setState({solved:true});\n    }\n   }\n  render() {\n    let showAlert = this.state.solved;\n    let alertContent;\n\n    if (showAlert) {\n      alertContent = (\n        <Alert severity=\"success\">\n          Thank you for saving humanity, Tenyksian!\n        </Alert>\n      );\n    } else {\n      alertContent = <Alert severity=\"warning\">Humanity is in danger!</Alert>;\n    }\n\n    let content = (\n      <div>\n        {alertContent}\n        <Button variant=\"success\" onClick={this.saveData}>SAVE IMAGES</Button>  \n        <div style={{ textAlign: \"center\" }}>\n          Tenyks Mini-Project Submission{\" \"}\n        </div>\n        {/*  TODO: add generation of your viewer   */}\n      </div>\n    );\n\n    return (\n      <>\n        {content}\n\n        <Container>  \n       \n        <Button variant=\"primary\" className=\"primary\" onClick={this.moveToHuman}>MOVE TO HUMAN</Button>\n        <div  style={{height:\"300px\",overflowY:\"auto\"}}>\n          <ul style={{listStyle:\"none\"}}>\n          <Row >     \n            {\n            this.state.transfer.tdata!==null && this.state.transfer.tdata.map((item) => \n              <Col onClick={()=>this.checkClickfun(this.getObject(item))}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>\n            )\n            }   \n           </Row>\n          </ul>\n        </div>\n        <Button variant=\"primary\" className=\"primary\" onClick={this.moveToTerminator}> MOVE TO TERMINATOR </Button><br />\n        <div  style={{height:\"300px\",overflowY:\"auto\"}}>\n          <ul style={{listStyle:\"none\"}}>\n           <Row >     \n            {\n            this.state.transfer.hdata!==null && this.state.transfer.hdata.map((item) => \n              <Col onClick={()=>this.checkClickfun(this.getObject(item))}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>\n\n            )\n            }   \n           </Row>\n\n          </ul>\n        </div>\n\n        </Container>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<Viewer />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}