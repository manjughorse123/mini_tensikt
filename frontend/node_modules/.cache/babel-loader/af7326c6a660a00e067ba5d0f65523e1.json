{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Desktop/reactproject/frontend/src/components/Resource.jsx\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport getResource from \"../actions/GetResource\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport Transfer from \"../actions/Transfer\";\nimport { getapi, header, imgapi } from \"../constant\";\nimport \"../app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Resource extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkClickfun = dd => {\n      if (this.state.checkClick == false) {\n        this.setState({\n          checkClick: true\n        });\n        this.setState({\n          gr: dd.group\n        });\n        document.getElementById(dd.id).classList.add(\"applyonselect\");\n\n        if (dd.group == \"terminator\") {\n          this.state.transfer.selectedHuman.push(dd);\n          this.setState({\n            selectedHuman: this.state.transfer.selectedHuman\n          });\n        }\n\n        if (dd.group == \"human\") {\n          this.state.transfer.selectedTermi.push(dd);\n          this.setState({\n            selectedTermi: this.state.transfer.selectedTermi\n          });\n        }\n      } else {\n        this.setState({\n          checkClick: false\n        });\n        console.log(this.state.checkClick);\n        document.getElementById(dd.id).classList.remove(\"applyonselect\"); // if(dd.group==\"terminator\"){\n        //   let res = this.state.transfer.selectedTermi.filter( item => item != dd); \n        //   this.state.transfer.selectedTermi=[];\n        //   this.setState({selectedTermi:this.state.transfer.selectedTermi})\n        //   this.state.transfer.selectedTermi.push(res)\n        //  }\n        // if(dd.group==\"human\"){\n        //   let res = this.state.transfer.selectedHuman.filter( item => item != dd); \n        //   this.state.transfer.selectedHuman=[];\n        //   this.setState({selectedHuman:this.state.transfer.selectedHuman})\n        //   this.state.transfer.selectedHuman.push(res)\n        // }   \n      }\n    };\n\n    this.moveToTerminator = () => {\n      this.state.transfer.tdata = [...this.state.transfer.tdata, ...this.state.transfer.selectedHuman];\n      this.setState({\n        tdata: this.state.transfer.tdata\n      });\n      console.log(this.state.transfer.tdata);\n      this.removeElement(this.state.transfer.selectedHuman);\n    };\n\n    this.moveToHuman = () => {\n      this.state.transfer.hdata = [...this.state.transfer.hdata, ...this.state.transfer.selectedTermi];\n      this.setState({\n        hdata: this.state.transfer.hdata\n      });\n      console.log(this.state.transfer.hdata);\n      this.removeElement(this.state.transfer.selectedTermi);\n    };\n\n    this.removeElement = element => {\n      if (element[0].group == \"human\") {\n        element.forEach(item => {\n          this.state.transfer.tdata.map((ele, index) => {\n            if (item.id == ele.id) {\n              delete this.state.transfer.tdata[index];\n              console.log(this.state.transfer.tdata);\n              this.setState({\n                tdata: this.state.transfer.tdata\n              });\n            }\n          });\n        }); // this.setState({selectedTermi:[]})\n      }\n\n      if (element[0].group == \"terminator\") {\n        element.forEach(item => {\n          this.state.transfer.hdata.map((ele, index) => {\n            if (item.id == ele.id) {\n              delete this.state.transfer.hdata[index];\n              console.log(this.state.transfer.hdata[index]);\n              this.setState({\n                hdata: this.state.transfer.hdata\n              });\n            }\n          });\n        }); // this.setState({selectedHuman:[]})\n      }\n    };\n\n    this.saveData = () => {};\n\n    this.state = {\n      data: null,\n      total: 0,\n      checkClick: false,\n      transfer: {\n        gr: \"\",\n        tdata: [],\n        hdata: [],\n        selectedHuman: [],\n        selectedTermi: []\n      }\n    };\n  } // make selectable\n\n\n  async componentDidMount() {\n    let result = null;\n    let resp = null;\n    resp = await fetch(getapi, header).then(response => response.json()).then(function (res) {\n      result = res;\n    });\n    let imgdata = result.imgData;\n    let hcollect = [];\n    let tcollect = [];\n    this.setState({\n      total: result.total\n    });\n\n    for (let i = 0; i < this.state.total; i++) {\n      if (imgdata[i].group == \"terminator\") {\n        this.state.transfer.tdata.push(imgdata[i]);\n        this.setState({\n          tdata: this.state.transfer.tdata\n        });\n      }\n\n      if (imgdata[i].group == \"human\") {\n        this.state.transfer.hdata.push(imgdata[i]);\n        this.setState({\n          hdata: this.state.transfer.hdata\n        });\n      }\n    }\n  }\n\n  getObject(item) {\n    let id = item.id;\n    let filepath = item.filepath;\n    let group = item.group == \"human\" ? \"terminator\" : \"human\";\n    let isclicked = item.isclicked;\n    let title = item.title;\n    return {\n      filepath,\n      group,\n      id,\n      isclicked,\n      title\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: saveData,\n        children: \"SAVE IMAGES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"primary\",\n        onClick: this.moveToHuman,\n        children: \"MOVE TO HUMAN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"300px\",\n          overflowY: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: this.state.transfer.tdata !== null && this.state.transfer.tdata.map(item => /*#__PURE__*/_jsxDEV(Col, {\n              onClick: () => this.checkClickfun(this.getObject(item)),\n              id: item.id,\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: imgapi + item.id,\n                  className: \"img \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 93\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 89\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"primary\",\n        onClick: this.moveToTerminator,\n        children: \" MOVE TO TERMINATOR \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 116\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"300px\",\n          overflowY: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: this.state.transfer.hdata !== null && this.state.transfer.hdata.map(item => /*#__PURE__*/_jsxDEV(Col, {\n              onClick: () => this.checkClickfun(this.getObject(item)),\n              id: item.id,\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: imgapi + item.id,\n                  className: \"img \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 93\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 89\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/lenovo/Desktop/reactproject/frontend/src/components/Resource.jsx"],"names":["React","Component","ReactDOM","getResource","Container","Row","Col","Button","Transfer","getapi","header","imgapi","Resource","constructor","props","checkClickfun","dd","state","checkClick","setState","gr","group","document","getElementById","id","classList","add","transfer","selectedHuman","push","selectedTermi","console","log","remove","moveToTerminator","tdata","removeElement","moveToHuman","hdata","element","forEach","item","map","ele","index","saveData","data","total","componentDidMount","result","resp","fetch","then","response","json","res","imgdata","imgData","hcollect","tcollect","i","getObject","filepath","isclicked","title","render","height","overflowY","listStyle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\"\r\nimport getResource from \"../actions/GetResource\";\r\nimport { Container,Row,Col,Button } from \"react-bootstrap\";\r\nimport Transfer from \"../actions/Transfer\";\r\nimport { getapi,header,imgapi } from \"../constant\"\r\nimport \"../app.css\";\r\nexport default class Resource extends Component{\r\n   \r\n    constructor(props){\r\n     super(props) \r\n     this.state = {data:null,total:0,checkClick:false,\r\n      transfer:{gr:\"\",tdata:[],hdata:[],selectedHuman:[],selectedTermi:[]}}\r\n    }\r\n    \r\n    // make selectable\r\n      checkClickfun = (dd)=>{\r\n       if(this.state.checkClick==false){\r\n       \r\n       this.setState({checkClick:true});\r\n       this.setState({gr:dd.group});\r\n\r\n       document.getElementById(dd.id).classList.add(\"applyonselect\")\r\n       if(dd.group==\"terminator\"){\r\n          this.state.transfer.selectedHuman.push(dd)\r\n          this.setState({selectedHuman:this.state.transfer.selectedHuman})\r\n\r\n       }\r\n       if(dd.group==\"human\"){\r\n        this.state.transfer.selectedTermi.push(dd)\r\n        this.setState({selectedTermi:this.state.transfer.selectedTermi})\r\n\r\n      }\r\n\r\n     }else{\r\n       this.setState({checkClick:false});\r\n       console.log(this.state.checkClick)\r\n       document.getElementById(dd.id).classList.remove(\"applyonselect\")\r\n\r\n      // if(dd.group==\"terminator\"){\r\n        \r\n      //   let res = this.state.transfer.selectedTermi.filter( item => item != dd); \r\n      //   this.state.transfer.selectedTermi=[];\r\n        \r\n      //   this.setState({selectedTermi:this.state.transfer.selectedTermi})\r\n      //   this.state.transfer.selectedTermi.push(res)\r\n      \r\n      //  }\r\n      // if(dd.group==\"human\"){\r\n      //   let res = this.state.transfer.selectedHuman.filter( item => item != dd); \r\n      //   this.state.transfer.selectedHuman=[];\r\n        \r\n      //   this.setState({selectedHuman:this.state.transfer.selectedHuman})\r\n      //   this.state.transfer.selectedHuman.push(res)\r\n\r\n      // }   \r\n     }\r\n   }\r\n    async componentDidMount(){\r\n      let result=null;\r\n      let resp=null;\r\n      resp = await fetch(getapi,header)\r\n      .then(response => response.json()).then(function(res){\r\n        result =res\r\n       });\r\n       let imgdata=result.imgData;\r\n       let hcollect=[];let tcollect=[];\r\n       this.setState({total:result.total});\r\n       for(let i=0;i<this.state.total;i++){\r\n         if(imgdata[i].group==\"terminator\"){\r\n           this.state.transfer.tdata.push(imgdata[i]);\r\n           this.setState({tdata:this.state.transfer.tdata})\r\n         }\r\n         if(imgdata[i].group==\"human\"){\r\n          this.state.transfer.hdata.push(imgdata[i]);\r\n          this.setState({hdata:this.state.transfer.hdata})\r\n         }\r\n       }\r\n    \r\n       \r\n    }\r\n\r\n     moveToTerminator = ()=>{\r\n      this.state.transfer.tdata = [...this.state.transfer.tdata, ...this.state.transfer.selectedHuman]\r\n      this.setState({tdata:this.state.transfer.tdata})\r\n      console.log(this.state.transfer.tdata)\r\n      this.removeElement(this.state.transfer.selectedHuman);\r\n     }\r\n     \r\n     moveToHuman = ()=>{\r\n        this.state.transfer.hdata = [...this.state.transfer.hdata, ...this.state.transfer.selectedTermi]\r\n        this.setState({hdata:this.state.transfer.hdata})\r\n        console.log(this.state.transfer.hdata)\r\n        this.removeElement(this.state.transfer.selectedTermi);\r\n\r\n     }\r\n     removeElement = (element)=>{\r\n       \r\n      if(element[0].group==\"human\"){\r\n        element.forEach(item =>{\r\n         this.state.transfer.tdata.map((ele,index) => {\r\n           if(item.id==ele.id){\r\n             delete this.state.transfer.tdata[index]\r\n             console.log(this.state.transfer.tdata)\r\n             this.setState({tdata:this.state.transfer.tdata});\r\n           }\r\n         })\r\n        })\r\n        // this.setState({selectedTermi:[]})\r\n      }\r\n      if(element[0].group==\"terminator\"){\r\n        element.forEach(item =>{\r\n         this.state.transfer.hdata.map((ele,index) => {\r\n           if(item.id==ele.id){\r\n             delete this.state.transfer.hdata[index]\r\n             console.log(this.state.transfer.hdata[index])\r\n             this.setState({hdata:this.state.transfer.hdata});\r\n           }\r\n         })\r\n        })\r\n        // this.setState({selectedHuman:[]})\r\n      }\r\n     }\r\n     getObject(item) {\r\n      let id=item.id\r\n      let filepath=item.filepath\r\n      let group=item.group==\"human\"?\"terminator\":\"human\";\r\n      let isclicked = item.isclicked\r\n      let title = item.title\r\n      return {filepath,group,id,isclicked,title} \r\n     }\r\n     saveData =()=>{\r\n\r\n     }\r\n      render(){\r\n      return(\r\n        <Container>  \r\n        <Button variant=\"success\" onClick={saveData}>SAVE IMAGES</Button>  \r\n        <Button variant=\"primary\" className=\"primary\" onClick={this.moveToHuman}>MOVE TO HUMAN</Button>\r\n        <div  style={{height:\"300px\",overflowY:\"auto\"}}>\r\n          <ul style={{listStyle:\"none\"}}>\r\n          <Row >     \r\n            {\r\n            this.state.transfer.tdata!==null && this.state.transfer.tdata.map((item) => \r\n              <Col onClick={()=>this.checkClickfun(this.getObject(item))}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>\r\n            )\r\n            }   \r\n           </Row>\r\n          </ul>\r\n        </div>\r\n        <Button variant=\"primary\" className=\"primary\" onClick={this.moveToTerminator}> MOVE TO TERMINATOR </Button><br />\r\n        <div  style={{height:\"300px\",overflowY:\"auto\"}}>\r\n          <ul style={{listStyle:\"none\"}}>\r\n           <Row >     \r\n            {\r\n            this.state.transfer.hdata!==null && this.state.transfer.hdata.map((item) => \r\n              <Col onClick={()=>this.checkClickfun(this.getObject(item))}  id={item.id}><li><img src={imgapi+item.id} className=\"img \"  /></li> </Col>\r\n\r\n            )\r\n            }   \r\n           </Row>\r\n\r\n          </ul>\r\n        </div>\r\n\r\n        </Container>\r\n      )  \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}